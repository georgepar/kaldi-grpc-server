# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: asr.proto for package 'ilsp.spmd.asr'
# Original file comments:
# *
# Mimic Google Speech API for our services
# Original code from NVIDIA Jarvis: https://github.com/NVIDIA/speechsquad/blob/master/server/proto/jarvis_asr.proto
#

require 'grpc'
require 'asr_pb'

module Ilsp
  module Spmd
    module Asr
      module ILSPASR
        #
        # The ASR service provides two mechanisms for converting speech to text.
        class Service

          include ::GRPC::GenericService

          self.marshal_class_method = :encode
          self.unmarshal_class_method = :decode
          self.service_name = 'ilsp.spmd.asr.ILSPASR'

          # Recognize expects a RecognizeRequest and returns a RecognizeResponse. This
          # request will block until the audio is uploaded, processed, and a transcript
          # is returned.
          rpc :Recognize, ::Ilsp::Spmd::Asr::RecognizeRequest, ::Ilsp::Spmd::Asr::RecognizeResponse
          # StreamingRecognize is a non-blocking API call that allows audio data to be
          # fed to the server in chunks as it becomes available. Depending on the
          # configuration in the StreamingRecognizeRequest, intermediate results can be
          # sent back to the client. Recognition ends when the stream is closed by the
          # client.
          rpc :StreamingRecognize, stream(::Ilsp::Spmd::Asr::StreamingRecognizeRequest), stream(::Ilsp::Spmd::Asr::StreamingRecognizeResponse)
        end

        Stub = Service.rpc_stub_class
      end
    end
  end
end
